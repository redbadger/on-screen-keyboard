var onScreenKeyboard=function(){"use strict";var currentInputNode,Keyboard=function(props){if(this.keyRows=props.keys,!props.afterElement)throw new Error("No element to attach the keyboard to");if(this.afterElement=document.getElementById(props.afterElement),"undefined"==typeof this.keyRows||0===this.keyRows.length)throw new Error("The keyboard needs to have at least one key");this._setCurrentInputNode=this._setCurrentInputNode.bind(this),this.inputNodes=document.querySelectorAll("input.on-screen-keyboard");for(var x=0;x<this.inputNodes.length;x++)this.inputNodes[x].addEventListener("focus",this._setCurrentInputNode);this.keys=[],this.renderedKeyboard=this.render()};Keyboard.prototype._setCurrentInputNode=function(e){currentInputNode=e.target,currentInputNode.setAttribute("class",currentInputNode.className+" active"),currentInputNode.addEventListener("key-pressed",function(e){e.target.value=e.detail});var keyboardShownEvent=new CustomEvent("keyboard-shown");this.renderedKeyboard.dispatchEvent(keyboardShownEvent)},Keyboard.prototype.remove=function(){for(var x=0;x<this.inputNodes.length;x++)this.inputNodes[x].removeEventListener("focus",this._setCurrentInputNode);for(var y=0;y<this.keys.length;y++)this.keys[y]._remove();this.renderedKeyboard.removeEventListener("keyboard-shown",this._keyboardShown)},Keyboard.prototype.buildRow=function(row){var DOMElement=document.createElement("div");return DOMElement.setAttribute("class","row"),row.forEach(function(key){key=new Key(key),DOMElement.appendChild(key.el),this.keys.push(key)}.bind(this)),DOMElement},Keyboard.prototype.render=function(){var buffer=document.createDocumentFragment();this.keyRows.forEach(function(row){row=this.buildRow(row),buffer.appendChild(row)}.bind(this));var keyboardUI=document.createElement("div");return keyboardUI.setAttribute("id","keyboard"),keyboardUI.addEventListener("keyboard-shown",this._keyboardShown),keyboardUI.appendChild(buffer),this.afterElement.parentNode.insertBefore(keyboardUI,this.afterElement.nextSibling),keyboardUI},Keyboard.prototype._keyboardShown=function(){this.setAttribute("class","shown")};var Key=function(key){if("string"!=typeof key&&"[object Object]"!==Object.prototype.toString.call(key))throw new Error("The key provided is not a string nor an object");this.key=key,this._onClick=this._onClick.bind(this),this.el=this.render()};return Key.prototype._remove=function(){this.el.removeEventListener("click",this._onClick)},Key.prototype._buildInputValue=function(){var newInputValue,currentInputValue=currentInputNode.value;if("object"==typeof this.key)switch(this.key.action){case"delete":newInputValue=currentInputValue.substr(0,currentInputValue.length-1)}else newInputValue=currentInputValue+this.key;return newInputValue},Key.prototype._onClick=function(){if(currentInputNode){var keyPressEvent=new CustomEvent("key-pressed",{detail:this._buildInputValue()});currentInputNode.dispatchEvent(keyPressEvent)}},Key.prototype.render=function(){var text=this.key,DOMElement=document.createElement("button");return"object"==typeof text&&(text=this.key.text),DOMElement.innerHTML=text,DOMElement.setAttribute("id","key-"+text),DOMElement.setAttribute("class","key"),DOMElement.addEventListener("click",this._onClick),DOMElement},{Keyboard:Keyboard,Key:Key,_getCurrentInputNode:function(){return currentInputNode},_setCurrentInputNode:function(value){currentInputNode=value}}}();